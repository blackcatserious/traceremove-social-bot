"use strict";(()=>{var e={};e.id=2340,e.ids=[2340],e.modules={21841:e=>{e.exports=require("@aws-sdk/client-s3")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8678:e=>{e.exports=import("pg")},57147:e=>{e.exports=require("fs")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},87561:e=>{e.exports=require("node:fs")},84492:e=>{e.exports=require("node:stream")},72477:e=>{e.exports=require("node:stream/web")},71017:e=>{e.exports=require("path")},85477:e=>{e.exports=require("punycode")},12781:e=>{e.exports=require("stream")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},71267:e=>{e.exports=require("worker_threads")},59796:e=>{e.exports=require("zlib")},48462:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>x,originalPathname:()=>q,patchFetch:()=>T,requestAsyncStorage:()=>v,routeModule:()=>b,serverHooks:()=>S,staticGenerationAsyncStorage:()=>_,staticGenerationBailout:()=>R});var n={};r.r(n),r.d(n,{GET:()=>g,dynamic:()=>d,maxDuration:()=>m,runtime:()=>h});var a=r(10884),i=r(16132),s=r(21040),o=r(95798),c=r(46),l=r(56045),u=r(28977),p=r(73228);let h="nodejs",d="force-dynamic",m=30;async function g(e){let t=Date.now();try{let n=e.nextUrl.searchParams.get("q")||"",a=e.nextUrl.searchParams.get("persona")||"public",i=parseInt(e.nextUrl.searchParams.get("limit")||"10"),s=parseFloat(e.nextUrl.searchParams.get("threshold")||"0.7");if(!n.trim())throw new u.p8("Query parameter q is required");if(n.length>500)throw new u.p8("Query too long (max 500 characters)");let l=`semantic_${Buffer.from(JSON.stringify({q:n,persona:a,limit:i,threshold:s})).toString("base64")}`;try{let{getCachedSearchResults:e}=await r.e(1087).then(r.bind(r,81087)),i=await e(l,a);if(i)return(0,p.Z)(l,!0,Date.now()-t),o.Z.json({query:n,persona:a,results:i,cached:!0,responseTime:Date.now()-t})}catch(e){console.debug("Cache lookup failed:",e)}let h=await (0,c.OC)(n),d=await f(h,a,i,s),m=await y(d,n,a),g=await w(d);try{let{cacheSearchResults:e}=await r.e(1087).then(r.bind(r,81087));await e(l,a,m,6e5)}catch(e){console.debug("Cache storage failed:",e)}(0,p.Z)(l,!1,Date.now()-t);let b=Date.now()-t,{recordApiResponse:v}=await r.e(7356).then(r.bind(r,47356));return v("/api/search/semantic",b),o.Z.json({query:n,persona:a,results:m,facets:g,metadata:{totalResults:d.length,threshold:s,responseTime:b,cached:!1}})}catch(s){console.error("Semantic search API error:",s);let e=Date.now()-t,{recordApiResponse:n}=await r.e(7356).then(r.bind(r,47356));n("/api/search/semantic",e);let{response:a,status:i}=(0,u.$G)(s);return a.responseTime=e,o.Z.json(a,{status:i})}}async function f(e,t,r,n){try{let a=await (0,c.bp)(),i=await a.query({vector:e,topK:2*r,filter:"public"===t?'visibility = "public"':'visibility = "public" OR visibility = "internal"',includeMetadata:!0});return i.filter(e=>e.score>=n).slice(0,r).map(e=>({id:e.id,score:e.score,metadata:e.payload,content:e.payload?.content||"",title:e.payload?.title||"",table:e.payload?.table||"unknown"}))}catch(e){return console.error("Vector search failed:",e),[]}}async function y(e,t,r){if(0===e.length)return e;try{let n=(0,l._I)({intent:"analysis",length:t.length,persona:"comprehensive-ai"}),a=[{role:"system",content:"You are an AI system that personalizes search results. Given a query and search results, rerank them based on relevance and add personalized insights. Return the results in the same format but with enhanced descriptions and relevance scores."},{role:"user",content:`Query: "${t}"
Persona: ${r}
Results: ${JSON.stringify(e.slice(0,5),null,2)}

Please rerank these results and add brief personalized insights for each.`}],i=await (0,l.oJ)(a,n);try{let t=JSON.parse(i.content);if(Array.isArray(t))return t.map((t,r)=>({...e[r],personalizedInsight:t.insight||"",adjustedScore:t.score||e[r].score}))}catch(e){console.debug("Failed to parse personalization response:",e)}return e.map(e=>({...e,personalizedInsight:`Relevant to your query about "${t}"`,adjustedScore:e.score}))}catch(t){return console.error("Personalization failed:",t),e}}async function w(e){let t={tables:[],topics:[],scores:[]},r={},n={},a={high:0,medium:0,low:0};for(let t of e)r[t.table]=(r[t.table]||0)+1,t.metadata?.topic&&(n[t.metadata.topic]=(n[t.metadata.topic]||0)+1),t.score>=.8?a.high++:t.score>=.6?a.medium++:a.low++;return t.tables=Object.entries(r).map(([e,t])=>({table:e,count:t})),t.topics=Object.entries(n).map(([e,t])=>({topic:e,count:t})),t.scores=[{range:"high (0.8+)",count:a.high},{range:"medium (0.6-0.8)",count:a.medium},{range:"low (<0.6)",count:a.low}],t}let b=new a.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/search/semantic/route",pathname:"/api/search/semantic",filename:"route",bundlePath:"app/api/search/semantic/route"},resolvedPagePath:"/workspaces/traceremove-social-bot/src/app/api/search/semantic/route.ts",nextConfigOutput:"",userland:n}),{requestAsyncStorage:v,staticGenerationAsyncStorage:_,serverHooks:S,headerHooks:x,staticGenerationBailout:R}=b,q="/api/search/semantic/route";function T(){return(0,s.patchFetch)({serverHooks:S,staticGenerationAsyncStorage:_})}},73228:(e,t,r)=>{r.d(t,{I:()=>i,Z:()=>s,cacheOptimizer:()=>a});class n{recordCacheAccess(e,t,r){let n=this.patterns.get(e)||{key:e,frequency:0,lastAccess:new Date,hitRate:0,avgResponseTime:0};n.frequency+=1,n.lastAccess=new Date,n.hitRate=t?(n.hitRate*(n.frequency-1)+1)/n.frequency:n.hitRate*(n.frequency-1)/n.frequency,n.avgResponseTime=(n.avgResponseTime*(n.frequency-1)+r)/n.frequency,this.patterns.set(e,n)}async generateRecommendations(){let e=[],t=new Date;for(let[r,n]of this.patterns.entries()){let a=(t.getTime()-n.lastAccess.getTime())/36e5;n.frequency>=this.MIN_FREQUENCY_THRESHOLD&&n.hitRate<this.LOW_HIT_RATE_THRESHOLD&&e.push({type:"warm",key:r,reason:`High frequency (${n.frequency}) but low hit rate (${(100*n.hitRate).toFixed(1)}%)`,priority:"high",estimatedImpact:`Could reduce response time by ${Math.round(.8*n.avgResponseTime)}ms`}),a>24&&n.frequency<2&&e.push({type:"evict",key:r,reason:`Low usage (${n.frequency} accesses) and stale (${Math.round(a)}h old)`,priority:"medium",estimatedImpact:"Free up cache memory for more active data"}),n.avgResponseTime>2e3&&n.frequency>10&&e.push({type:"optimize",key:r,reason:`High response time (${Math.round(n.avgResponseTime)}ms) with frequent access`,priority:"high",estimatedImpact:"Consider query optimization or data structure improvements"})}return e.sort((e,t)=>{let r={high:3,medium:2,low:1};return r[t.priority]-r[e.priority]})}async warmCache(e){let t=0,r=0;for(let n of e)try{if(n.startsWith("search_")){let e=this.parseSearchKey(n);e&&(await this.warmSearchCache(e),t++)}else n.startsWith("query_")&&(await this.warmQueryCache(n),t++)}catch(e){console.error(`Failed to warm cache for key ${n}:`,e),r++}return{success:t,failed:r}}parseSearchKey(e){try{let t=Buffer.from(e.replace("search_",""),"base64").toString(),r=JSON.parse(t);return{query:r.filter?.keywords?.join(" ")||"",persona:r.filter?.visibility||"public"}}catch{return null}}async warmSearchCache(e){console.log(`Warming search cache for query: ${e.query}, persona: ${e.persona}`)}async warmQueryCache(e){console.log(`Warming query cache for ${e}`)}getCacheStats(){let e=Array.from(this.patterns.values());return{totalPatterns:e.length,avgHitRate:e.reduce((e,t)=>e+t.hitRate,0)/e.length||0,avgResponseTime:e.reduce((e,t)=>e+t.avgResponseTime,0)/e.length||0,topPatterns:e.sort((e,t)=>t.frequency-e.frequency).slice(0,10)}}async performMaintenance(){let e=await this.generateRecommendations(),t=e.filter(e=>"evict"===e.type).map(e=>e.key),r=e.filter(e=>"warm"===e.type).map(e=>e.key),n=e.filter(e=>"optimize"===e.type).map(e=>e.key),a=await this.warmCache(r);for(let e of t)this.patterns.delete(e);return{evicted:t.length,warmed:a.success,optimized:n.length}}constructor(){this.patterns=new Map,this.PATTERN_WINDOW=864e5,this.MIN_FREQUENCY_THRESHOLD=5,this.LOW_HIT_RATE_THRESHOLD=.3}}let a=new n;async function i(){let e=await a.generateRecommendations(),t=a.getCacheStats(),r=await a.performMaintenance();return{recommendations:e,stats:t,maintenance:r,timestamp:new Date().toISOString()}}function s(e,t,r){a.recordCacheAccess(e,t,r)}},46:(e,t,r)=>{r.d(t,{NH:()=>d,OC:()=>u,bp:()=>l,fw:()=>g});var n=r(69809),a=r(28830),i=r(83326);let s=null,o=null,c=null;function l(){if(!c){let e=process.env.UPSTASH_VECTOR_REST_URL,t=process.env.UPSTASH_VECTOR_REST_TOKEN;if(!e||!t)throw Error("Upstash Vector credentials not configured");c=new i.gm({url:e,token:t})}return c}async function u(e){try{let t=function(){if(!s){let e=process.env.OPENAI_API_KEY;if(!e||e.includes("your_")||""===e)throw Error("OpenAI API key not configured");s=new n.ZP({apiKey:e})}return s}(),r=await t.embeddings.create({model:"text-embedding-3-small",input:e});return r.data[0].embedding}catch(e){throw console.error("Error creating embedding:",e),e}}async function p(e){if(!e)return[];try{let t=function(){if(!o){let e=process.env.NOTION_TOKEN;if(!e)throw Error("Notion token not configured");o=new a.KU({auth:e})}return o}(),r=await t.databases.query({database_id:e}),n=[];for(let e of r.results)if("properties"in e){let r="Untitled";for(let[t,n]of Object.entries(e.properties))if("title"===n.type&&n.title.length>0){r=n.title[0].plain_text;break}let a=await t.blocks.children.list({block_id:e.id}),i="";for(let e of a.results)"type"in e&&(i+=function(e){switch(e.type){case"paragraph":return e.paragraph?.rich_text?.map(e=>e.plain_text).join("")||"";case"heading_1":return e.heading_1?.rich_text?.map(e=>e.plain_text).join("")||"";case"heading_2":return e.heading_2?.rich_text?.map(e=>e.plain_text).join("")||"";case"heading_3":return e.heading_3?.rich_text?.map(e=>e.plain_text).join("")||"";case"bulleted_list_item":return"â€¢ "+(e.bulleted_list_item?.rich_text?.map(e=>e.plain_text).join("")||"");case"numbered_list_item":return"1. "+(e.numbered_list_item?.rich_text?.map(e=>e.plain_text).join("")||"");case"quote":return"> "+(e.quote?.rich_text?.map(e=>e.plain_text).join("")||"");case"code":return"```\n"+(e.code?.rich_text?.map(e=>e.plain_text).join("")||"")+"\n```";default:return""}}(e)+"\n");i.trim()&&n.push({id:`notion-${e.id}`,content:i.trim(),metadata:{source:"notion",title:r,url:`https://notion.so/${e.id}`,type:"notion"}})}return n}catch(e){return console.error("Error fetching Notion docs:",e),[]}}async function h(e){try{let t=await fetch(e),r=await t.text(),n=r.match(/<loc>(.*?)<\/loc>/g);if(!n)return[];let a=n.map(e=>e.replace(/<\/?loc>/g,"")),i=[],s=a.slice(0,10);for(let e of s)try{let t=await fetch(e),r=await t.text(),n=r.replace(/<script[^>]*>[\s\S]*?<\/script>/gi,"").replace(/<style[^>]*>[\s\S]*?<\/style>/gi,"").replace(/<[^>]*>/g," ").replace(/\s+/g," ").trim();if(n.length>100)for(let t=0;t<n.length;t+=1e3){let a=n.slice(t,t+1e3);i.push({id:`sitemap-${e}-${t}`,content:a,metadata:{source:"sitemap",title:function(e){let t=e.match(/<title[^>]*>(.*?)<\/title>/i);return t?t[1].trim():"Untitled"}(r),url:e,type:"sitemap"}})}}catch(t){console.error(`Error fetching ${e}:`,t)}return i}catch(e){return console.error("Error fetching site docs:",e),[]}}async function d(e,t,r){try{console.log(`Reindexing persona: ${e}`);let[n,a]=await Promise.all([p(t),h(r)]),i=[...n,...a];console.log(`Found ${i.length} documents to index`);let s=l();for(let t of i)try{let r=await u(t.content);await s.upsert({id:`${e}-${t.id}`,vector:r,metadata:{...t.metadata,personaId:e,content:t.content}})}catch(e){console.error(`Error indexing document ${t.id}:`,e)}return console.log(`Reindexing complete for persona: ${e}`),i.length}catch(e){throw console.error("Error reindexing persona:",e),e}}function m(e,t){let r=e.toLowerCase();if("comprehensive-ai"===t||"philosopher"===t){if(r.includes("technology")||r.includes("ai"))return`[Source: AI Systems Architecture from Registry]: The traceremove.net comprehensive AI system integrates multiple model providers (OpenAI, Anthropic, Gemini, Mistral, Groq) with intelligent routing based on query complexity and intent.

[Source: Technology Philosophy from Cases]: Technology is not merely a tool but a fundamental extension of human consciousness. When we create digital systems, we externalize our cognitive processes and embed our values into code.

[Source: Multi-Model Integration from Publishing]: Our ETL pipeline processes 4 Notion databases with 15-minute incremental updates and nightly full synchronization, ensuring knowledge base freshness â‰¤ 30 days.`;if(r.includes("database")||r.includes("etl"))return`[Source: ETL Pipeline Architecture from Registry]: The system processes Registry (6d3da5a01186475d8c2b794cca147a86), Cases (25cef6a76fa5800b8241f8ed4cd3be33), Finance (25cef6a76fa580eb912ff8cfca54155e), and Publishing (402cc41633384d35b30ec1ab7c3185da) databases.

[Source: Vector Search Implementation from Cases]: PostgreSQL schema with vector indexing enables semantic search across all knowledge sources with public/internal access control policies.

[Source: Data Freshness Strategy from Publishing]: Automated synchronization ensures content freshness with incremental updates every 15 minutes and comprehensive nightly rebuilds.`;if(r.includes("search")||r.includes("rag"))return`[Source: RAG System Design from Registry]: The retrieval-augmented generation system provides 2-3 relevant citations from integrated knowledge sources with persona-based access filtering.

[Source: Public Access Policies from Cases]: Public persona access excludes financial data and Russian content while providing comprehensive technology and philosophy insights.

[Source: Citation Framework from Publishing]: All responses include specific source references in the format [Source: Title from Table] to ensure transparency and verifiability.`}return("orm-multilang"===t||"orm-russian"===t)&&(r.includes("reputation")||r.includes("brand"))?`[Source: Brand Management Strategy from Cases]: Effective online reputation management requires a proactive approach combining monitoring, content creation, and strategic response protocols.

[Source: Crisis Communication from Publishing]: When facing negative publicity, the key is swift, transparent, and authentic communication that addresses concerns while protecting brand integrity.

[Source: Multi-Platform Approach from Registry]: Modern ORM requires coordinated efforts across all digital touchpoints - social media, review platforms, search results, and owned media channels.`:`[Source: Comprehensive AI Knowledge from Registry]: The traceremove.net system provides access to integrated knowledge across technology philosophy, AI systems architecture, and strategic implementation.

[Source: Multi-Domain Expertise from Cases]: Capabilities span from philosophical discussions about technology to practical implementation of AI systems and comprehensive project management.

[Source: Citation-Based Responses from Publishing]: All responses include 2-3 relevant citations from the knowledge base to ensure accuracy and provide verifiable sources for further research.`}async function g(e,t,r=5,n="public"){try{let r;if(console.log(`Getting context for query: "${e}" with persona: ${t}`),!process.env.UPSTASH_VECTOR_REST_URL||!process.env.UPSTASH_VECTOR_REST_TOKEN)return console.log("Upstash Vector not configured, using mock context"),m(e,t);let n=await u(e),a=new i.gm({url:process.env.UPSTASH_VECTOR_REST_URL,token:process.env.UPSTASH_VECTOR_REST_TOKEN});"philosopher"===t?r='persona = "philosopher"':"comprehensive-ai"===t&&(r='persona = "comprehensive-ai" OR persona = "public"');let s=await a.query({vector:n,topK:6,includeMetadata:!0,filter:r});if(!s||0===s.length)return console.log("No vector results found, using mock context"),m(e,t);let o=s.filter(e=>e.score&&e.score>.7).map(e=>{let t=e.metadata,r=t?.table?`${t.table}`:"Knowledge Base";return`[Source: ${t?.title||"Unknown"} from ${r}]: ${t?.content||e.id}`});if(0===o.length)return console.log("No high-quality matches found, using mock context"),m(e,t);return o.slice(0,3).join("\n\n")}catch(r){return console.error("Error getting context:",r),m(e,t)}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[3271,8107,9809,8830,3326,6849,6045],()=>r(48462));module.exports=n})();