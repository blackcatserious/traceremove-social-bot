"use strict";exports.id=1087,exports.ids=[1087],exports.modules={81087:(e,t,s)=>{s.r(t),s.d(t,{cacheQueryResult:()=>u,cacheSearchResults:()=>n,clearAdvancedCache:()=>h,getCacheStats:()=>i,getCachedQueryResult:()=>o,getCachedSearchResults:()=>l,withAdvancedCache:()=>r});class c{constructor(){this.cache=new Map,this.maxSize=1e3,this.defaultTTL=3e5,this.cleanupInterval=setInterval(()=>this.cleanup(),6e4)}set(e,t,s){let c=Date.now(),a=c+(s||this.defaultTTL);this.cache.size>=this.maxSize&&this.evictLRU(),this.cache.set(e,{key:e,value:t,expiry:a,hits:0,created:c,lastAccessed:c})}get(e){let t=this.cache.get(e);if(!t)return null;let s=Date.now();return s>t.expiry?(this.cache.delete(e),null):(t.hits++,t.lastAccessed=s,t.value)}has(e){let t=this.cache.get(e);return!!t&&(!(Date.now()>t.expiry)||(this.cache.delete(e),!1))}delete(e){return this.cache.delete(e)}clear(){this.cache.clear()}evictLRU(){let e="",t=Date.now();for(let[s,c]of this.cache.entries())c.lastAccessed<t&&(t=c.lastAccessed,e=s);e&&this.cache.delete(e)}cleanup(){let e=Date.now(),t=[];for(let[s,c]of this.cache.entries())e>c.expiry&&t.push(s);t.forEach(e=>this.cache.delete(e)),t.length>0&&console.log(`ðŸ§¹ Cache cleanup: removed ${t.length} expired entries`)}getStats(){let e=Date.now(),t=Array.from(this.cache.values()).map(t=>({key:t.key,hits:t.hits,age:e-t.created,ttl:t.expiry-e})),s=t.reduce((e,t)=>e+t.hits,0),c=s>0?s/t.length:0;return{size:this.cache.size,maxSize:this.maxSize,hitRate:c,entries:t.sort((e,t)=>t.hits-e.hits).slice(0,10)}}destroy(){this.cleanupInterval&&clearInterval(this.cleanupInterval),this.cache.clear()}}let a=new c;async function r(e,t,s){let c=a.get(e);if(null!==c)return c;let r=await t();return a.set(e,r,s),r}function i(){return a.getStats()}function h(){a.clear()}async function n(e,t,s,c=6e5){let r=`search:${t}:${Buffer.from(e).toString("base64")}`;a.set(r,s,c)}async function l(e,t){let s=`search:${t}:${Buffer.from(e).toString("base64")}`;return a.get(s)}async function u(e,t,s,c=3e5){let r=`query:${Buffer.from(e+JSON.stringify(t)).toString("base64")}`;a.set(r,s,c)}async function o(e,t){let s=`query:${Buffer.from(e+JSON.stringify(t)).toString("base64")}`;return a.get(s)}}};