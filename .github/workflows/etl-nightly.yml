name: nightly-etl

on:
  schedule:
    - cron: '0 1 * * *'  # 01:00 UTC
  workflow_dispatch: {}

jobs:
  etl:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: |
          npm ci
      - name: Build application
        run: |
          npm run build
      - name: Start Next.js server and run ETL
        env:
          NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
          NOTION_DB_REGISTRY: ${{ secrets.NOTION_DB_REGISTRY }}
          NOTION_DB_CASES: ${{ secrets.NOTION_DB_CASES }}
          NOTION_DB_PUBLISHING: ${{ secrets.NOTION_DB_PUBLISHING }}
          NOTION_DB_FINANCE: ${{ secrets.NOTION_DB_FINANCE }}
          PG_DSN: ${{ secrets.PG_DSN }}
          S3_ENDPOINT: ${{ secrets.S3_ENDPOINT }}
          S3_ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          S3_SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
          S3_BUCKET: traceremove-content
          QDRANT_URL: ${{ secrets.QDRANT_URL }}
          QDRANT_API_KEY: ${{ secrets.QDRANT_API_KEY }}
          UPSTASH_VECTOR_REST_URL: ${{ secrets.UPSTASH_VECTOR_REST_URL }}
          UPSTASH_VECTOR_REST_TOKEN: ${{ secrets.UPSTASH_VECTOR_REST_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          CRON_SECRET: ${{ secrets.CRON_SECRET }}
          EMBEDDINGS_MODEL: text-embedding-3-large
          PUBLIC_MODE: 'true'
          FULL_SCAN: '1'
          PORT: 3000
        run: |
          # Start the Next.js server in the background
          npm start &
          SERVER_PID=$!
          
          # Wait for server to be ready
          echo "⏳ Waiting for server to start..."
          for i in {1..30}; do
            if curl -s http://localhost:3000/api/system/health > /dev/null; then
              echo "✅ Server is ready"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "❌ Server failed to start within 30 seconds"
              kill $SERVER_PID 2>/dev/null || true
              exit 1
            fi
            sleep 1
          done
          
          # Run the ETL
          echo "🚀 Running full ETL sync..."
          RESPONSE=$(curl -s -w "%{http_code}" -o /tmp/etl_response.json http://localhost:3000/api/etl/full)
          
          if [ "$RESPONSE" -eq 200 ]; then
            echo "✅ ETL completed successfully"
            cat /tmp/etl_response.json
          else
            echo "❌ ETL failed with HTTP $RESPONSE"
            cat /tmp/etl_response.json
            kill $SERVER_PID 2>/dev/null || true
            exit 1
          fi
          
          # Clean up
          kill $SERVER_PID 2>/dev/null || true
